XF
I@V_RW\@V@ nOXZYO[^QP\\	_ 3~\VK]C^S WBF]EX	FqFWXPIB` [A
\_P2vAvRZVGPZnW@	Y\E5YPE,_CcCRBLZ\W_\_C_WPJ]WXRLCG\JJAoQ_^.~$BQQDC 

2tVVFYW[ SAV_Z
[bXEXXZ[~\VK]CrW6JUCpYRE SKG1[]@XWo?	N__G\S]	LF
ZBU	V@	M]]MPX\BYMDYMDC\YVRPAU^Bc_q[]F]sRGGiKP[wQBE$QLE1X
CA^YIF\MGF^EK\
QYSSJT_A\
bXEXXZ[JVMQB]	^	W_A 	^Q]VPUR[	__G_B	U
CP	M]z@USBfV\
]XWRB[FUMTLCHUXZT]ZKY_[]]PZLU]Z_GC	YX W^@T\M'@LA$VS5PV@[
__cZAQwWAiFS@DWBYE XDZFJOTQ^CPP[
]HYBV[DTDWA\IMPW
RAEQKYMQ]C\YIFJA
U[_	N]wQUXY[QRQJMWANQU\WFWBCZ_DER\ZGG4TWY	\[A$VS"@K@FZXVA]K
ZBYTX]PT_ES[^nV]\XYq$wEvZT AtSPJY]WE^[]	M]]@]F\\[[UZE[ZF\e]@_XWBPZXA0GAsWZT]Zp[VFA\KVTAPZF$BW$JQ
]JXGA\@B\MVW_NW[]DR]r]ZQ_RzRX\o]M[

^'IVBc_]^EZ]AVBPU^BXS[VB_AQ[ZF@TY@\YPWKZA]UQV_C
O[VVD^BYA]]LG_TZXQX
A	Cw\[MPND D	T\BRE1&FaWFG
wQ^UX C] YUCC]FGY_[UX[J WPFQ_ BTMBY_XBAL@^]\CYE\ACRXX]W	C_CQAEXKM7\Z\[L!]B
PA 	^Q]^QBRX MEE7UXZT]ZF~wvRY[LM]VXHC~]BU]RWHEFMWZWRXZEZGAZ\OCZ^@S^ZW\ZXWL[ C@Z_W^CDXCEY_ FMTWDV\	^M	D
ZTC
WKU
ZLE^[hfV\
]d
{RA_]^3h